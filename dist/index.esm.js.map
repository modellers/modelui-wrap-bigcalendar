{"version":3,"file":"index.esm.js","sources":["../src/components/BigCalendarComponent.js","../src/components/Calendar.js","../src/components/Components.js"],"sourcesContent":["/**\n * BigCalendar Component\n * \n * TODO:\n *  - use https://jquense.github.io/react-big-calendar/examples/index.html#prop-eventPropGetter (to control selectable)\n *  - use https://jquense.github.io/react-big-calendar/examples/index.html#prop-slotPropGetter (to control background color for free-time)\n *  - use https://jquense.github.io/react-big-calendar/examples/index.html#prop-dayPropGetter (to control background color for free-time)\n */\nimport React from 'react';\n// styles\n// import { withStyles } from '@mui/styles';\n\n// https://stackblitz.com/edit/big-calendar-demo-o6t6ha?file=index.js\n// https://jquense.github.io/react-big-calendar/examples/index.html\nimport moment from 'moment';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\n// event handler\n// input base\nimport { structs } from 'modelui-core-runtime';\n\nconst calendarEvents = {\n  period: {\n    alias: [],\n    info: {\n      name: 'period',\n      description: 'Period'\n    },\n    schema: {}\n  },\n  viewing: {\n    alias: [],\n    info: {\n      name: 'viewing',\n      description: 'Period viewed'\n    },\n    schema: {}\n  },\n}\n\nexport const options = {\n  \"id\": \"calendar-big\",\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Big Calendar\",\n  \"description\": \"Calendar options\",\n  \"x-layout\": \"component\",\n  \"type\": \"object\",\n  \"version\": 0.1,\n  \"properties\": {\n    \"views\": {\n      \"title\": \"Views\",\n      \"description\": \"TBD\",\n      \"type\": \"string\",\n      \"enum\": ['month', 'week', 'work_week', 'day', 'agenda'],\n      \"default\": \"work_week\"\n    },\n    \"config\": {\n      \"title\": \"Config\",\n      \"description\": \"TBD\",\n      \"type\": \"string\",\n      \"enum\": ['month', 'week', 'day', 'agenda'],\n      \"default\": 'month'\n    },\n    \"selectable\": {\n      \"description\": \"Selectable color\",\n      \"type\": \"boolean\",\n      \"default\": true\n    },\n  },\n  \"required\": [\"buttonVariant\", \"size\", \"color\"]\n}\n\nexport const events = { ...structs.ListBase.events, ...calendarEvents };\nexport const triggers = structs.ListBase.triggers;\n\nexport const config = {\n\n  name: \"Big Calendar\",\n  type: \"calendar-big\",\n  author: \"Kjartan JÃ³nsson\",\n  description: \"Big Calendar component\",\n  version: 0.1,\n  relation: {\n    contains: [],\n    within: \"component\" // parent\n  },\n  options: options,\n  state: structs.ListBase.StateList\n}\n\n\n// FIXME: not working styling, test by moving font family to style \nconst style = (theme) => ({\n  root: {\n    // fontFamily: 'sans-serif'\n  }\n});\n\nconst localizer = momentLocalizer(moment);\n\nclass BigCalendarComponent extends structs.ListBase.ListBase {\n  /**\n   * Used to manage internal state of avatars\n   */\n  constructor(props) {\n    super(props);\n    this.containerRef = React.createRef();\n  }\n\n  handleSelectSlot = (evt, event_name) => {\n    event_name = event_name || 'period';\n    // selecting the calendar slots where no event exists\n    this.triggerEvent(this.props.id, event_name, {\n      start: evt.start,\n      end: evt.end,\n      slots: evt.slots\n    }, {});\n  }\n\n  showSelected = (id, idx) => {\n    // parent implementation to update the visual representation\n    if (this.containerRef && this.containerRef.current) {\n      // FIXME: should higlight the event https://jquense.github.io/react-big-calendar/examples/index.html#api\n      const sel = { \"id\": id };\n      this.containerRef.current.handleSelectEvent(sel);\n    }\n    return true; // returns true to update state. Else do not update state.\n  }\n\n  handleSelectEvent(evt, event_name) {\n    this.handleSelect(evt.id, evt, undefined, evt);\n  }\n\n  handleViewing(evt, event_name) {\n    this.triggerEvent(this.props.id, 'viewing', {\n      start: evt.start,\n      end: evt.end,\n      slots: evt.slots || null,\n      type: event_name\n    }, {});\n\n  }\n\n  render() {\n    // style\n    const { classes } = this.props;\n    const viewStyle = this.props.config.options;\n\n    return (\n      <div classes={classes}>\n        <Calendar\n          ref={this.containerRef}\n          /*\n          config={viewStyle.config}\n          */\n          events={this.state.data}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          style={{ height: \"100vh\" }}\n          localizer={localizer}\n\n          // views={viewStyle.views}\n          defaultView={viewStyle.config}\n          // scrollToTime={new Date(2022, 1, 1, 1)}\n\n          defaultDate={moment().toDate()} // defaultDate={new Date(2015, 3, 12)}\n\n          selectable={viewStyle.selectable}\n          onSelectEvent={(evt) => {\n            this.handleSelectSlot(evt, 'selected');\n          }}\n          onSelectSlot={(evt) => {\n            this.handleSelectSlot(evt);\n          }}\n          onDoubleClickEvent={(evt) => {\n            this.handleSelectEvent(evt, 'dblclick');\n          }}\n          onDrillDown={(evt) => {\n            this.handleViewing(evt, 'drilldown');\n          }}\n          onKeyPressEvent={(evt) => {\n            console.info(evt); // this.handleSelectSlot(evt);\n          }}\n          onNavigate={(evt) => {\n            this.handleViewing(evt, 'navigate');\n          }}\n          onSelecting={(evt) => {\n            console.info(evt); // this.handleSelectSlot(evt);\n          }}\n          onRangeChange={(evt) => {\n            const range = {\n              start: evt.start || undefined,\n              ends: evt.ends || undefined,\n              slots: evt\n            }\n            if (evt.length) {\n              range.start = evt[0];\n              range.ends = evt[evt.length - 1];\n            }\n            this.handleViewing(range, 'range');\n          }}\n          onShowMore={(evt) => {\n            console.info(evt); // this.handleSelectSlot(evt);\n          }}\n          onView={(evt) => {\n            // shows actions when pressing different views (day, agenda, work_week, month)\n          }}\n        />\n      </div>\n    )\n  }\n\n}\n\n// export default withStyles(style, { withTheme: true })(BigCalendarComponent);\nexport default BigCalendarComponent;","import React from 'react';\n\nimport BigCalendarComponent, { events, triggers, config } from './BigCalendarComponent'\n\nexport default function BigCalendar(props) {\n    // lets enumerate schema to extract uiSchema and validation\n    return (<BigCalendarComponent {...props} />);\n}\n\nexport function registerBigCalendar(component_manager) {\n    // self register component to layout manager\n    component_manager.registerComponent({\n        component: BigCalendar,\n        type: config.type,\n        events: events,\n        triggers: triggers,\n        config: config\n    });\n}","\n// Managers and factories\nimport { layout } from 'modelui-core-runtime';\n\n// Components\nimport { registerBigCalendar } from './Calendar';\n\nexport default function registerComponents(component_manager) {\n\n    if (!component_manager) {\n        component_manager = layout.Manager.ComponentManager.getInstance();\n    }\n    /*\n    if (component_manager.constructor.name !== 'ComponentManager') {\n        throw `Constructor must be component manager. Got type ${component_manager.constructor.name}`;\n    }\n    */\n    registerBigCalendar(component_manager);\n\n}"],"names":["calendarEvents","period","alias","info","name","description","schema","viewing","options","events","_objectSpread","structs","ListBase","triggers","config","type","author","version","relation","contains","within","state","StateList","localizer","momentLocalizer","moment","BigCalendarComponent","props","handleSelectSlot","evt","event_name","triggerEvent","id","start","end","slots","showSelected","idx","containerRef","current","sel","handleSelectEvent","React","createRef","handleSelect","undefined","classes","viewStyle","data","height","toDate","selectable","handleViewing","console","range","ends","length","BigCalendar","registerBigCalendar","component_manager","registerComponent","component","registerComponents","layout","Manager","ComponentManager","getInstance"],"mappings":"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"}